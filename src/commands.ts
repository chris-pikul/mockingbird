import {
    randomColorCMYK,
    randomColorHSB,
    randomColorHSL,
    randomColorHex,
    randomColorHexSimple,
    randomColorRGB,
    randomColorRGBA,
} from './colors';
import {
    currentISODate,
    currentISOTime,
    currentISOTimestamp,
    currentLocaleDate,
    currentLocaleTime,
    currentLocaleTimestamp,
    currentTimestampFormatted,
    randomDay,
    randomISODate,
    randomISOTime,
    randomISOTimestamp,
    randomMonth,
    randomYear,
} from './date-time';
import { randomBool } from './misc';
import {
    getE,
    getEpsilon,
    getPI,
    randomBinaryInteger16,
    randomBinaryInteger24,
    randomBinaryInteger32,
    randomByte,
    randomDigit,
    randomDigits,
    randomFloat,
    randomFloatRange,
    randomHexInteger16,
    randomHexInteger24,
    randomHexInteger32,
    randomInteger,
    randomInteger32,
    randomIntegerRange,
    randomNegativeFloat,
    randomNegativeInteger,
    randomOctalInteger16,
    randomOctalInteger24,
    randomOctalInteger32,
    randomPercentage,
    randomPositiveFloat,
    randomPositiveInteger,
    randomPrime,
    randomShort,
    randomSignedByte,
    randomSignedShort,
    randomSimpleFloat,
    randomUnit,
} from './numbers';
import {
    randomASCIICharacter,
    randomASCIISymbol,
    randomLatinLetter,
    randomLatinLetterLower,
    randomLatinLetterUpper,
    randomLatinNumber,
} from './text';
import { Command } from './vscode';

const commands: Command[] = [
    {
        key: 'others.randomBool',
        category: 'Random',
        title: 'Boolean',
        func: randomBool,
    },
    {
        key: 'date-time.currentISOTimestamp',
        category: 'Insert',
        title: 'Current ISO Timestamp',
        shortTitle: 'ISO Timestamp',
        func: currentISOTimestamp,
    },
    {
        key: 'date-time.currentISODate',
        category: 'Insert',
        title: 'Current ISO Date',
        shortTitle: 'ISO Date',
        func: currentISODate,
    },
    {
        key: 'date-time.currentISOTime',
        category: 'Insert',
        title: 'Current ISO Time',
        shortTitle: 'ISO Time',
        func: currentISOTime,
    },
    {
        key: 'date-time.currentLocaleTimestamp',
        category: 'Insert',
        title: 'Current Timestamp Using Local Locale',
        shortTitle: 'Timestamp Local Locale',
        func: currentLocaleTimestamp,
    },
    {
        key: 'date-time.currentLocaleDate',
        category: 'Insert',
        title: 'Current Date Using Local Locale',
        shortTitle: 'Date Local Locale',
        func: currentLocaleDate,
    },
    {
        key: 'date-time.currentLocaleTime',
        category: 'Insert',
        title: 'Current Time Using Local Locale',
        shortTitle: 'Date Local Locale',
        func: currentLocaleTime,
    },
    {
        key: 'date-time.currentFormatted',
        category: 'Insert',
        title: 'Current Date/Time With Formatting',
        shortTitle: 'Formatted Date/Time',
        func: currentTimestampFormatted,
        prompt: {
            message:
                'Supply a formatting string that uses Moment.JS/Date-FNS acceptable tokens',
            placeholder: 'h:mm do MMMM uuuu',
            defaultValue: "h:mmaaa, do 'of' MMMM uuuu",
            validator: (input?: string) => !!(input && input.length > 0),
            errorMessage: 'Please enter a formatting string',
        },
    },
    {
        key: 'date-time.randomYear',
        category: 'Random',
        title: 'Year (1900-Now)',
        shortTitle: 'Random Year',
        func: randomYear,
    },
    {
        key: 'date-time.randomYearCustom',
        category: 'Random',
        title: 'Year With Custom Range',
        shortTitle: 'Random Year Custom',
        func: randomYear,
        prompt: {
            message:
                'Supply a range as a space separated minimum and maximum, the maximum is inclusive',
            placeholder: '1900 2000',
            defaultValue: `1900 ${new Date().getFullYear()}`,
            validator: (input?: string) => !!(input && input.indexOf(' ') > 0),
            errorMessage:
                'Please enter a valid space-deliminated integer range',
        },
    },
    {
        key: 'date-time.randomMonth',
        category: 'Random',
        title: 'Month (1..12)',
        shortTitle: 'Random Month',
        func: randomMonth,
    },
    {
        key: 'date-time.randomDay',
        category: 'Random',
        title: 'Day (1..30)',
        shortTitle: 'Random Day',
        func: randomDay,
    },
    {
        key: 'date-time.randomISOTimestamp',
        category: 'Random',
        title: 'ISO Timestamp (1970..Now)',
        shortTitle: 'Random ISO Timestamp',
        func: randomISOTimestamp,
    },
    {
        key: 'date-time.randomISODate',
        category: 'Random',
        title: 'ISO Date (1970..Now)',
        shortTitle: 'Random ISO Date',
        func: randomISODate,
    },
    {
        key: 'date-time.randomISOTime',
        category: 'Random',
        title: 'ISO Time',
        shortTitle: 'Random ISO Time',
        func: randomISOTime,
    },
    {
        key: 'number.pi',
        category: 'Insert',
        title: 'Pi',
        shortTitle: 'Pi',
        func: getPI,
    },
    {
        key: 'number.e',
        category: 'Insert',
        title: "Euler's Number",
        shortTitle: 'Euler',
        func: getE,
    },
    {
        key: 'number.epsilon',
        category: 'Insert',
        title: 'Epsilon (Really Small Number)',
        shortTitle: 'Epsilon',
        func: getEpsilon,
    },
    {
        key: 'number.randomUnit',
        category: 'Random',
        title: 'Unit Float (0..1)',
        shortTitle: 'Random Unit',
        func: randomUnit,
    },
    {
        key: 'number.randomPositiveFloat',
        category: 'Random',
        title: 'Positive Float (0..MAX)',
        shortTitle: 'Random Positive Float',
        func: randomPositiveFloat,
    },
    {
        key: 'number.randomNegativeFloat',
        category: 'Random',
        title: 'Negative Float (0..-MAX)',
        shortTitle: 'Random Negative Float',
        func: randomNegativeFloat,
    },
    {
        key: 'number.randomFloat',
        category: 'Random',
        title: 'Complex Float (-MAX/2..MAX/2)',
        shortTitle: 'Random Complex Float',
        func: randomFloat,
    },
    {
        key: 'number.randomSimpleFloat',
        category: 'Random',
        title: 'Simple Float',
        shortTitle: 'Random Float',
        func: randomSimpleFloat,
    },
    {
        key: 'number.randomFloatRange',
        category: 'Random',
        title: 'Float in Range',
        shortTitle: 'Random Float',
        func: randomFloatRange,
        prompt: {
            message:
                'Provide a range by specifying the minimum and maximum values separated by a space.',
            defaultValue: '0 100',
            placeholder: 'MIN MAX',
            validator: (input?: string) => !!(input && input.indexOf(' ') > 0),
        },
    },
    {
        key: 'number.randomPositiveInteger',
        category: 'Random',
        title: 'Positive Integer',
        shortTitle: 'Random Positive Integer',
        func: randomPositiveInteger,
    },
    {
        key: 'number.randomNegativeInteger',
        category: 'Random',
        title: 'Negative Integer',
        shortTitle: 'Random Negative Integer',
        func: randomNegativeInteger,
    },
    {
        key: 'number.randomInteger',
        category: 'Random',
        title: 'Integer',
        shortTitle: 'Random Integer',
        func: randomInteger,
    },
    {
        key: 'number.randomInteger32',
        category: 'Random',
        title: 'Integer (32bit)',
        shortTitle: 'Random Integer 32',
        func: randomInteger32,
    },
    {
        key: 'number.randomIntegerRange',
        category: 'Random',
        title: 'Integer Range',
        shortTitle: 'Random Integer Range',
        func: randomIntegerRange,
        prompt: {
            message:
                'Provide a range by specifying the minimum and maximum values separated by a space.',
            defaultValue: '0 100',
            placeholder: 'MIN MAX',
            validator: (input?: string) => !!(input && input.indexOf(' ') > 0),
        },
    },
    {
        key: 'number.randomByte',
        category: 'Random',
        title: 'Byte (Unsigned)',
        shortTitle: 'Random Byte',
        func: randomByte,
    },
    {
        key: 'number.randomSignedByte',
        category: 'Random',
        title: 'Byte (Signed)',
        shortTitle: 'Random Signed Byte',
        func: randomSignedByte,
    },
    {
        key: 'number.randomShort',
        category: 'Random',
        title: 'Short (16bit Integer)',
        shortTitle: 'Random Short',
        func: randomShort,
    },
    {
        key: 'number.randomSignedShort',
        category: 'Random',
        title: 'Signed Short (16bit Integer)',
        shortTitle: 'Random Signed Short',
        func: randomSignedShort,
    },
    {
        key: 'number.randomHexInteger16',
        category: 'Random',
        title: 'Hexidecimal Integer (16bit)',
        shortTitle: 'Random 16bit Hex',
        func: randomHexInteger16,
    },
    {
        key: 'number.randomHexInteger24',
        category: 'Random',
        title: 'Hexidecimal Integer (24bit)',
        shortTitle: 'Random 24bit Hex',
        func: randomHexInteger24,
    },
    {
        key: 'number.randomHexInteger32',
        category: 'Random',
        title: 'Hexidecimal Integer (32bit)',
        shortTitle: 'Random 32bit Hex',
        func: randomHexInteger32,
    },
    {
        key: 'number.randomDigit',
        category: 'Random',
        title: 'Digit (0-9)',
        shortTitle: 'Random Digit',
        func: randomDigit,
    },
    {
        key: 'number.randomOctalInteger16',
        category: 'Random',
        title: 'Octal Integer (16bit)',
        shortTitle: 'Random Octal 16',
        func: randomOctalInteger16,
    },
    {
        key: 'number.randomOctalInteger24',
        category: 'Random',
        title: 'Octal Integer (24bit)',
        shortTitle: 'Random Octal 24',
        func: randomOctalInteger24,
    },
    {
        key: 'number.randomOctalInteger32',
        category: 'Random',
        title: 'Octal Integer (32bit)',
        shortTitle: 'Random Octal 32',
        func: randomOctalInteger32,
    },
    {
        key: 'number.randomBinaryInteger16',
        category: 'Random',
        title: 'Binary Integer (16bit)',
        shortTitle: 'Random Binary 16',
        func: randomBinaryInteger16,
    },
    {
        key: 'number.randomBinaryInteger24',
        category: 'Random',
        title: 'Binary Integer (24bit)',
        shortTitle: 'Random Binary 24',
        func: randomBinaryInteger24,
    },
    {
        key: 'number.randomBinaryInteger32',
        category: 'Random',
        title: 'Binary Integer (32bit)',
        shortTitle: 'Random Binary 32',
        func: randomBinaryInteger32,
    },
    {
        key: 'number.randomPrime',
        category: 'Random',
        title: 'Prime',
        shortTitle: 'Random Prime',
        func: randomPrime,
    },
    {
        key: 'number.randomPercentage',
        category: 'Random',
        title: 'Percentage',
        func: randomPercentage,
    },
    {
        key: 'number.randomDigits',
        category: 'Random',
        title: 'Digits To Length',
        shortTitle: 'Digits',
        func: randomDigits,
        prompt: {
            message: 'Please enter the total length of random digits you want',
            placeholder: '100',
            validator: (input?: string) => !!(input && parseInt(input) > 0),
            errorMessage: 'Please enter a positive integer',
        },
    },
    {
        key: 'color.randomHex',
        category: 'Random',
        title: 'Hex Color',
        func: randomColorHex,
    },
    {
        key: 'color.randomHexSimple',
        category: 'Random',
        title: 'Hex Color (Simple Limited-Precision)',
        func: randomColorHexSimple,
    },
    {
        key: 'color.randomRGB',
        category: 'Random',
        title: 'RGB Color',
        func: randomColorRGB,
    },
    {
        key: 'color.randomRGBA',
        category: 'Random',
        title: 'RGBA Color',
        func: randomColorRGBA,
    },
    {
        key: 'color.randomHSL',
        category: 'Random',
        title: 'HSL Color',
        func: randomColorHSL,
    },
    {
        key: 'color.randomHSB',
        category: 'Random',
        title: 'HSB Color',
        func: randomColorHSB,
    },
    {
        key: 'color.randomCMYK',
        category: 'Random',
        title: 'CMYK Color',
        func: randomColorCMYK,
    },
    {
        key: 'text.latinLetterUpper',
        category: 'Random Text',
        title: 'Latin Upper-case Letter',
        func: randomLatinLetterUpper,
    },
    {
        key: 'text.latinLetterLower',
        category: 'Random Text',
        title: 'Latin Lower-case Letter',
        func: randomLatinLetterLower,
    },
    {
        key: 'text.latinLetter',
        category: 'Random Text',
        title: 'Latin Letter (A-Z case-insensitive)',
        func: randomLatinLetter,
    },
    {
        key: 'text.latinNumber',
        category: 'Random Text',
        title: 'Latin Number/Digit',
        func: randomLatinNumber,
    },
    {
        key: 'text.latinCharacter',
        category: 'Random Text',
        title: 'Latin Character (A-Z, a-z, 0-9)',
        func: randomLatinLetterUpper,
    },
    {
        key: 'text.asciiSymbol',
        category: 'Random Text',
        title: 'Latin/ASCII Symbol',
        func: randomASCIISymbol,
    },
    {
        key: 'text.asciiCharacter',
        category: 'Random Text',
        title: 'ASCII Character (A-Z, a-z, 0-9, symbols)',
        func: randomASCIICharacter,
    },
];
export default commands;
